{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace typeExamples",
    "description": "This service is located at [https://localhost/service-root/](https://localhost/service-root/)",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.01",
  "x-sap-shortText": "Service for namespace typeExamples",
  "servers": [
    {
      "url": "https://localhost/service-root"
    }
  ],
  "tags": [
    {
      "name": "set"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Sends a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET set HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/set": {
      "get": {
        "summary": "Retrieves a list of set.",
        "tags": [
          "set"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "withMaxLength",
                  "withMaxLength desc",
                  "binary",
                  "binary desc",
                  "primitive",
                  "primitive desc",
                  "propertyPath",
                  "propertyPath desc",
                  "sbyte",
                  "sbyte desc",
                  "time",
                  "time desc",
                  "kaputt",
                  "kaputt desc",
                  "unknown",
                  "unknown desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "withMaxLength",
                  "binary",
                  "primitive",
                  "propertyPath",
                  "sbyte",
                  "time",
                  "kaputt",
                  "unknown"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved set",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of single",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typeExamples.single"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single set.",
        "tags": [
          "set"
        ],
        "requestBody": {
          "description": "New set",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/typeExamples.single-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/typeExamples.single"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "typeExamples.single": {
        "title": "single",
        "type": "object",
        "properties": {
          "withMaxLength": {
            "allOf": [
              {
                "$ref": "#/components/schemas/typeExamples.typeDefinitionNew"
              }
            ],
            "maxLength": 10
          },
          "binary": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "base64url"
              }
            }
          },
          "primitive": {
            "type": "object",
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          },
          "propertyPath": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          "sbyte": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int8"
              }
            }
          },
          "time": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "time",
                "example": "15:51:04"
              }
            }
          },
          "kaputt": {
            "type": "object",
            "properties": {
              "value": {}
            }
          },
          "unknown": {
            "$ref": "#/components/schemas/typeExamples.un-known"
          }
        }
      },
      "typeExamples.single-create": {
        "title": "single (for create)",
        "type": "object",
        "properties": {
          "withMaxLength": {
            "allOf": [
              {
                "$ref": "#/components/schemas/typeExamples.typeDefinitionNew"
              }
            ],
            "maxLength": 10
          },
          "binary": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "base64url"
              }
            }
          },
          "primitive": {
            "type": "object",
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          },
          "propertyPath": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          "sbyte": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int8"
              }
            }
          },
          "time": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "time",
                "example": "15:51:04"
              }
            }
          },
          "kaputt": {
            "type": "object",
            "properties": {
              "value": {}
            }
          },
          "unknown": {
            "$ref": "#/components/schemas/typeExamples.un-known"
          }
        }
      },
      "typeExamples.typeDefinitionNew": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "title": "typeDefinitionNew"
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}